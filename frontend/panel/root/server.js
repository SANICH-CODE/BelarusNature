document.addEventListener('DOMContentLoaded', function () {
    const editorLink = document.getElementById('editorLink');
    const usersLink = document.getElementById('usersLink');
    const monitoringLink = document.getElementById('monitoringLink');
    const backendLink = document.getElementById('backendLink');
    const searchLink = document.getElementById('searchLink');
    const content = document.getElementById('content');
    const sidebarMenu = document.getElementById('sidebarMenu');
    const burgerButton = document.getElementById('burgerButton');

    function setActive(link) {
        document.querySelectorAll('.sidebar .nav-link').forEach(btn => btn.classList.remove('active'));
        link.classList.add('active');
    }

    burgerButton.addEventListener('click', function () {
        sidebarMenu.classList.toggle('open');
    });

    function closeMenu() {
        sidebarMenu.classList.remove('open');
    }

    usersLink.addEventListener('click', function (event) {
event.preventDefault();
setActive(usersLink);
closeMenu();

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
content.innerHTML = '<div class="alert alert-info">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</div>';

fetch('https://sanich-code.github.io/BN/users.json')
    .then(response => response.json())
    .then(data => {
        content.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        const usersArray = Object.keys(data).map(userId => ({
            id: userId,
            ...data[userId]
        }));

        const table = document.createElement('table');
        table.className = 'table table-bordered table-striped table-responsive';

        const thead = document.createElement('thead');
        const theadRow = document.createElement('tr');
        Object.keys(usersArray[0]).forEach(header => {
            const th = document.createElement('th');
            th.textContent = header;
            theadRow.appendChild(th);
        });
        thead.appendChild(theadRow);
        table.appendChild(thead);

        const tbody = document.createElement('tbody');
        usersArray.forEach(user => {
            const row = document.createElement('tr');
            Object.values(user).forEach(value => {
                const td = document.createElement('td');
                td.textContent = value;
                row.appendChild(td);
            });
            tbody.appendChild(row);
        });
        table.appendChild(tbody);

        content.appendChild(table);
    })
    .catch(error => {
        content.innerHTML = `<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}</div>`;
    });
});

    editorLink.addEventListener('click', function (event) {
        event.preventDefault();
        setActive(editorLink);
        closeMenu();
        content.innerHTML = '<p>–†–µ–¥–∞–∫—Ç–æ—Ä –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω.</p>';
    });
    backendLink.addEventListener("click", function (event) {
event.preventDefault();
setActive(backendLink);
closeMenu();

content.innerHTML = `
    <div class="container">
        <h3 class="mb-3" id="panelTitle">–ü–∞–Ω–µ–ª—å BackEnd</h3>
        <div class="d-grid gap-2" id="buttonContainer">
            <button class="btn btn-primary btn-lg backend-btn" data-url="/backend/post">üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å POST-–∑–∞–ø—Ä–æ—Å</button>
            <button class="btn btn-warning btn-lg backend-btn" data-url="/backend/logs">üìú –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞</button>
            <button class="btn btn-danger btn-lg backend-btn" data-url="/backend/restart">üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä üö¨</button>
        </div>
        <div id="mobileStatus" class="backend-mobile-status d-none">–û–∂–∏–¥–∞–Ω–∏–µ...</div>
        <div id="backendFrameContainer" class="mt-4 text-center">
            <p class="alert alert-secondary backend-status">–û–∂–∏–¥–∞–Ω–∏–µ...</p>
        </div>
    </div>
`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
function handleButtonClick(button) {
    const url = button.getAttribute("data-url");
    const container = document.getElementById("backendFrameContainer");
    const mobileStatus = document.getElementById("mobileStatus");
    const buttonContainer = document.getElementById("buttonContainer");
    const panelTitle = document.getElementById("panelTitle");

    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
    buttonContainer.innerHTML = "";

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–û–∂–∏–¥–∞–Ω–∏–µ" –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    if (window.innerWidth < 992) {
        mobileStatus.classList.remove("d-none");
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
    container.innerHTML = `<div class="alert alert-info">‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å...</div>`;

    setTimeout(() => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º iframe –∏ –∏–∑–º–µ–Ω—è–µ–º –µ–≥–æ –≤—ã—Å–æ—Ç—É
        container.innerHTML = `<iframe class="siframe" src="${url}" width="100%" height="60px" class="border border-primary"></iframe>`;

 
        // –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —Å–∫—Ä—ã–≤–∞–µ–º iframe –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º "–û–∂–∏–¥–∞–Ω–∏–µ"
        setTimeout(() => {
            container.innerHTML = `<p class="alert alert-secondary backend-status">–û–∂–∏–¥–∞–Ω–∏–µ...</p>`;

            // –°–∫—Ä—ã–≤–∞–µ–º "–û–∂–∏–¥–∞–Ω–∏–µ" –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
            if (window.innerWidth < 992) {
                mobileStatus.classList.add("d-none");
            }

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
            buttonContainer.innerHTML = `
                <button class="btn btn-primary btn-lg backend-btn" data-url="/backend/post">üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å POST-–∑–∞–ø—Ä–æ—Å</button>
                <button class="btn btn-warning btn-lg backend-btn" data-url="/backend/logs">üìú –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞</button>

                <button class="btn btn-danger btn-lg backend-btn" data-url="/backend/restart">üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä üö¨</button>
              
            `;
            
            // –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
            document.querySelectorAll(".backend-btn").forEach((button) => {
                button.removeEventListener("click", handleButtonClick);
                button.addEventListener("click", function () {
                    handleButtonClick(button);
                });
            });
        }, 5000); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    }, 1500); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
}

// –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫ –∫–Ω–æ–ø–∫–∞–º
document.querySelectorAll(".backend-btn").forEach((button) => {
    button.addEventListener("click", function () {
        handleButtonClick(button);
    });

});
});



    monitoringLink.addEventListener('click', function (event) {
        event.preventDefault();
        setActive(monitoringLink);
        closeMenu();
        content.innerHTML = `<iframe src="datacenter/index.html" width="100%" height="600px"></iframe>`;
    });
    searchLink.addEventListener('click', function (event) {
        event.preventDefault();
        setActive(searchLink);
        closeMenu();
    
        // –û—á–∏—â–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        content.innerHTML = `
            <h2>–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
            <div class="mb-3">
                <input type="text" id="searchInput" class="form-control" placeholder="–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
            </div>
            <button id="searchButton" class="btn btn-primary">üîç –ù–∞–π—Ç–∏</button>
            <div id="searchResult" class="mt-3"></div>
        `;
    
        document.getElementById('searchButton').addEventListener('click', function () {
            const userId = document.getElementById('searchInput').value.trim();
            const resultContainer = document.getElementById('searchResult');
    
            if (!userId) {
                resultContainer.innerHTML = `<div class="alert alert-warning">–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!</div>`;
                return;
            }
    
            resultContainer.innerHTML = `<div class="alert alert-info">üîÑ –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...</div>`;
    
            // –ú–∞—Å—Å–∏–≤ ID, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫—Ä—ã—Ç–∞
            const hiddenUsers = ["6978792645"]; // –î–æ–±–∞–≤—å —Å—é–¥–∞ –Ω—É–∂–Ω—ã–µ ID
    
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫—Ä—ã—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            // if (hiddenUsers.includes(userId)) {
            //     resultContainer.innerHTML = `<div class="alert alert-danger">‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å–∫—Ä—ã—Ç–∞!</div>`;
            //     document.getElementById('searchInput').value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            //     return;
            // }
    
            // –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            fetch('https://sanich-code.github.io/BN/users.json')
                .then(response => response.json())
                .then(data => {
                    if (data[userId]) {
                        const user = data[userId];
                        const telegramLink = `https://t.me/${user.username}`;
    
                        resultContainer.innerHTML = `
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">üë§ ${user.username}</h5>
                                    <p><strong>ID:</strong> ${userId}</p>
                                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${user.status}</p>
                                    <p><strong>Premium:</strong> ${user.premium === "True" ? "‚úÖ" : "‚ùå"}</p>
                                    <p><strong>–ó–∞–±–∞–Ω–µ–Ω:</strong> ${user.ban === "True" ? "‚úî  –î–∞" : "üö´ –ù–µ—Ç"}</p>
                                    <p><strong>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</strong> ${user.RegDate} –≤ ${user.RegTime}</p>
                                    <p><strong>üîó Telegram:</strong> <a href="${telegramLink}" target="_blank">–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</a></p>
                                </div>
                            </div>
                        `;
                        document.getElementById('searchInput').value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
                    } else {
                        resultContainer.innerHTML = `<div class="alert alert-danger">‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!</div>`;
                        document.getElementById('searchInput').value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
                    }
                })
                .catch(error => {
                    resultContainer.innerHTML = `<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}</div>`;
                });
        });
    });
    
    
    //–ö–û–ù–ï–¶ –ú–ï–ù–Æ! –í–°–¢–ê–í–õ–Ø–¢–¨ –î–û –°–õ–ï–î. –ó–ê–ö–†–´–¢–ò–Ø
});

    
    


// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const currentUser = JSON.parse(sessionStorage.getItem('currentUser'));

if (!currentUser || currentUser.status !== 'root') {
    window.location.href = '/login/';
} else {
    document.getElementById('adminName').textContent = `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${currentUser.username}`;
}
// if (!sessionStorage.getItem('auth_notified')) {
//         const adminName = currentUser.username;
//         const currentTime = new Date().toLocaleString('ru-RU', { hour12: false });
//         const message = encodeURIComponent(`üö® –ê–•–¢–£–ù–ì –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø\nüë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${adminName}\n‚è≥ –í—Ä–µ–º—è: ${currentTime}`);

//         const botToken = '8112856615:AAG1N_yvRaHBpd5DblJ4uAo-cKE6QD1Pq-o'; // –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
//         const chatId = '-1002079156732'; // ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞

//         fetch(`https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&text=${message}`)
//             .then(response => response.json())
//             .then(data => {
//                 if (data.ok) {
//                     console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:", data);
//                     sessionStorage.setItem('auth_notified', 'true'); // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
//                 } else {
//                     console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", data);
//                 }
//             })
//             .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", error));
//     }

    // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    logoutButton.addEventListener('click', function (event) {
        event.preventDefault();
        sessionStorage.removeItem('currentUser'); // –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        sessionStorage.removeItem('auth_notified'); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        window.location.href = '/login/'; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    });
    
